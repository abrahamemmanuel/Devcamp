{"version":3,"sources":["../../../../src/server/api/profile/controllers.js"],"names":["ProfileCoontroller","req","res","errors","Profile","findOne","user","id","populate","then","profile","noprofile","status","render","redirect","catch","err","json","body","isValid","profileFields","handle","company","website","location","bio","githubusername","skills","split","social","youtube","twitter","facebook","instagram","linkedin","findOneAndUpdate","$set","new","save","newEdu","school","degree","fieldofstudy","from","to","current","description","education","unshift","newExp","title","experience","profileController"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport mongoose from \"mongoose\";\r\nimport Profile from \"../../..//database/models/Profile\";\r\nimport User from \"../../..//database/models/User\";\r\nimport validateProfileInput from \"../../../utils/validation/profile\";\r\n\r\nclass ProfileCoontroller {\r\n  getCurrentUserProfile(req, res) {\r\n    const errors = {};\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"avatar\"])\r\n      .then(profile => {\r\n        if (!profile) {\r\n          // Add to the errors object\r\n          errors.noprofile = \"You don't have a profile yet\";\r\n          return res.status(400).render(\"create-profile\", { errors });\r\n        } else {\r\n          return res.redirect(\"/api/profile/dashboard\");\r\n        }\r\n      })\r\n      .catch(err => res.status(501).json(err));\r\n  }\r\n\r\n  editProfile(req, res) {\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"avatar\"])\r\n      .then(profile => res.render(\"edit-profile\", { profile }));\r\n  }\r\n\r\n  createUserProfile(req, res) {\r\n    const { errors, isValid } = validateProfileInput(req.body);\r\n\r\n    // Check validation\r\n    if (!isValid) {\r\n      // Return any errors with 400 status\r\n      return res.redirect(\"create-profile\", { errors });\r\n    }\r\n\r\n    // Get fields\r\n    const profileFields = {};\r\n    profileFields.user = req.user.id;\r\n    if (req.body.handle) profileFields.handle = req.body.handle;\r\n    if (req.body.company) profileFields.company = req.body.company;\r\n    if (req.body.website) profileFields.website = req.body.website;\r\n    if (req.body.location) profileFields.location = req.body.location;\r\n    if (req.body.bio) profileFields.bio = req.body.bio;\r\n    if (req.body.status) profileFields.status = req.body.status;\r\n    if (req.body.githubusername)\r\n      profileFields.githubusername = req.body.githubusername;\r\n    // Skills split into array\r\n    if (typeof req.body.skills !== \"undefined\") {\r\n      profileFields.skills = req.body.skills.split(\",\");\r\n    }\r\n\r\n    // Social\r\n    profileFields.social = {};\r\n    if (req.body.youtube) profileFields.social.youtube = req.body.youtube;\r\n    if (req.body.twitter) profileFields.social.twitter = req.body.twitter;\r\n    if (req.body.facebook) profileFields.social.facebook = req.body.facebook;\r\n    if (req.body.instagram) profileFields.social.instagram = req.body.instagram;\r\n    if (req.body.linkedin) profileFields.social.linkedin = req.body.linkedin;\r\n\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"avatar\"])\r\n      .then(profile => {\r\n        if (profile) {\r\n          // Update\r\n          Profile.findOneAndUpdate(\r\n            { user: req.user.id },\r\n            { $set: profileFields },\r\n            { new: true }\r\n          ).then(profile =>\r\n            res.status(200).render(\"edit-profile\", { profile })\r\n          );\r\n        } else {\r\n          //Create\r\n\r\n          // Check if handle exist\r\n          Profile.findOne({ handle: profileFields.handle }).then(profile => {\r\n            if (profile) {\r\n              // Add to errors\r\n              errors.handle = \"That handle already exist\";\r\n              return res.render(\"create-profile\", { errors });\r\n            }\r\n\r\n            // Save Profile\r\n            new Profile(profileFields)\r\n              .save()\r\n              .then(profile => res.redirect(\"/api/profile/user\", { profile }));\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getExperiencePage(req, res) {\r\n    const errors = {};\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"avatar\"])\r\n      .then(profile => {\r\n        if (!profile) {\r\n          // Add to the errors object\r\n          errors.noprofile = \"You don't have a profile yet\";\r\n          return res.status(400).render(\"create-profile\", { errors });\r\n        } else {\r\n          return res.status(200).render(\"add-experience\", { profile });\r\n        }\r\n      })\r\n      .catch(err => res.status(501).json(err));\r\n  }\r\n\r\n  getEducationPage(req, res) {\r\n    const errors = {};\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"avatar\"])\r\n      .then(profile => {\r\n        if (!profile) {\r\n          // Add to the errors object\r\n          errors.noprofile = \"You don't have a profile yet\";\r\n          return res.status(400).render(\"create-profile\", { errors });\r\n        } else {\r\n          return res.status(200).render(\"add-education\", { profile });\r\n        }\r\n      })\r\n      .catch(err => res.status(501).json(err));\r\n  }\r\n\r\n  addEducation(req, res) {\r\n    // Find loggedin user by id\r\n    Profile.findOne({ user: req.user.id }).then(profile => {\r\n      // create new Education object\r\n      const newEdu = {\r\n        school: req.body.school,\r\n        degree: req.body.degree,\r\n        fieldofstudy: req.body.fieldofstudy,\r\n        from: req.body.from,\r\n        to: req.body.to,\r\n        current: req.body.current,\r\n        description: req.body.description\r\n      };\r\n\r\n      // Add to edu array\r\n      profile.education.unshift(newEdu);\r\n\r\n      profile\r\n        .save()\r\n        .then(profile => res.render(\"dashboard\", profile.education));\r\n    });\r\n  }\r\n\r\n  addExperience(req, res) {\r\n    // Find loggedin user by id\r\n    Profile.findOne({ user: req.user.id }).then(profile => {\r\n      // create new Education object\r\n      const newExp = {\r\n        title: req.body.title,\r\n        company: req.body.company,\r\n        location: req.body.location,\r\n        from: req.body.from,\r\n        to: req.body.to,\r\n        current: req.body.current,\r\n        description: req.body.description\r\n      };\r\n\r\n      // Add to exp array\r\n      profile.experience.unshift(newExp);\r\n\r\n      profile\r\n        .save()\r\n        .then(profile => res.render(\"dashboard\", profile.experience));\r\n    });\r\n  }\r\n\r\n  dashboard(req, res) {\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"isLoggedIn\"])\r\n      .then(profile => res.status(200).render(\"dashboard\", { profile }));\r\n  }\r\n\r\n  getUserProfile(req, res) {\r\n    Profile.findOne({ user: req.user.id })\r\n      .populate(\"user\", [\"name\", \"isLoggedIn\"])\r\n      .then(profile => res.status(200).render(\"private-profile\", { profile }));\r\n  }\r\n}\r\n\r\nconst profileController = new ProfileCoontroller();\r\n\r\nexport default profileController;\r\n"],"file":"controllers.js"}